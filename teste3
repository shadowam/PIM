#include <stdio.h>
#include <stdlib.h>
#include <conio.h>

typedef struct student
{
    long long int snum;
    char password[50];
    char fname[31];
    char lname[31];
    char mi[3];
    char bday[7];
    char course[6];
} record;

void add_record();
record getAccount();
void disp_all();
void modifySR();
record getNew();

int main()
{
    FILE* fp;
    int count=0;
    int i;
    int j;
    int login_choice;
    int menu_choice;
    long long int username;
    char password[21];
    record stud[10];

    clrscr();

    for(i=0; i<10; i++)
    {
        stud[i].snum = 0;
    }

    printf("\n\n\n								  Log-in as:\n\n");
    printf("								 1 - STUDENT\n\n");
    printf("								 2 - ADMIN\n\n");
    printf("\n\n\n							   Enter choice: ");
    scanf("%d", &login_choice);

    if(login_choice == 1)
    {
        clrscr();

        if((fp=fopen("Studentrecs.txt", "rb")) != NULL)
        {

            clrscr();

            printf("\n\nSTUDENT LOG-IN");
            printf("\n\nEnter student number: ");
            scanf("%lld", &username);
            printf("\n\nEnter password: ");
            scanf("%s", &password);

            clrscr();

            for(j=0; j<10; j++)
            {
                while(fread(&stud[j], sizeof(record), 1, fp))
                {
                if(username==stud[j].snum && password==stud[j].password);
                    break;
                }
            }

            printf("\n\nYou have successfully logged in! Press any key to continue...");
            getch();

            do
            {
                count++;
                clrscr();
                printf("\n\nSTUDENT MENU:\n\n");
                printf("\n1 - View personal entry\n");
                printf("\n2 - Modify name\n");
                printf("\n3 - Modify course\n");
                printf("\n4 - Modify birth date\n");
                printf("\n5 - Exit\n");
                printf("\nEnter choice: ");
                scanf("%d", &menu_choice);
                /*  if(menu_choice==1) {view_entry(stud);}
                if(menu_choice==2) {modName(stud);}
                if(menu_choice==3) {modCourse(stud);}
                if(menu_choice==4) {modBday(stud);}*/
                if(menu_choice==5) {clrscr(); printf("\n\n\nThank you for using SRMS! GoodBye!");}
            } while(menu_choice!=5);

            if(count==0)
            {
                printf("\n\nAccount does not exist! Please try again.");
                getch();
            }

            fclose(fp);

        }

        else
            printf("\n\nAn unknown record occured. Please try again.");
    }

    if(login_choice == 2)
    {
        clrscr();
        printf("\n\nADMIN LOG-IN");
        printf("\n\nEnter password: ");
        fflush(stdin);
        gets(password);

        if(strcmp(password, "admin") == 0)
        {
            clrscr();
            printf("\n\nYou have successfully logged-in! Press any key to continue...");
            getch();

            do
            {
                clrscr();
                printf("\n\nADMIN MENU:\n\n");
                printf("\n1 -  Add student record\n");
                printf("\n2 -  Display all entries\n");
                printf("\n3 -  Modify student record\n");
                printf("\n4 -  Delete student record\n");
                printf("\n5 -  Search student based on student number\n");
                printf("\n6 -  Delete all entries\n");
                printf("\n7 -  Log-out and Exit\n");
                printf("\nEnter Choice: ");
                scanf("%d", &menu_choice);
                if(menu_choice==1) {
                        add_record();
                }
                if(menu_choice==2) {disp_all();}
                if(menu_choice==3) {modifySR();}
                /*  if(menu_choice==6) {delSR(stud);}
                if(menu_choice==7) {search(stud);}
                if(menu_choice==8) {delAll(stud);} */
                if(menu_choice==7) {clrscr(); printf("\n\n\nThank you for using SRMS! GoodBye!");}
            } while(menu_choice!=7);

        }

        else printf("\n\nInvalid password.");
    }

    getch();
}

void add_record()
{
    clrscr();
    FILE* fp;
    record stud[10];
    int i = 0;
    int slot;
    char choice = 'y';

    if((fp = fopen("Studrecs.txt", "a+b")) == NULL)
        printf("\n\nAn unknown error occurred. Please try again.");
    else
    {
        while(choice == 'y' && i < 9)
        {
            for(i = 0; i < 10; i++)
            {
                if(stud[i].snum == 0)
                {
                    slot = i;
                    break;
                }
            }
            clrscr();
            if(i > 9)
            {
            printf("\n\nSorry, database full!");
            }
            else
            {
            clrscr();
            stud[slot] = getAccount();
            fwrite(&stud[slot], sizeof(record), 1, fp);
            printf("\n\nRecord successfully added!");
            fclose(fp);
            }
            if(i > 9)
            {
            clrscr();
            printf("\n\nSorry, database full!");
            }
            else
            {
                printf("\n\nEnter another account (press 'y' if yes): ");
                choice = getch();
            }
        }
    }
}

record getAccount()
{
record stud;

printf("\n\nADD STUDENT RECORD\n");
printf("\n\nEnter student number (student's username): ");
fflush(stdin);
scanf("%lld", &stud.snum);
printf("\n\nEnter password (for student): ");
fflush(stdin);
scanf("%s", &stud.password);
printf("\n\nEnter last name: ");
fflush(stdin);
scanf("%s", &stud.lname);
printf("\n\nEnter first name: ");
fflush(stdin);
scanf("%s", &stud.fname);
printf("\n\nEnter middle initial: ");
fflush(stdin);
scanf("%s", &stud.mi);
printf("\n\nEnter birthdate (MMDDYY): ");
fflush(stdin);
scanf("%s", &stud.bday);
printf("\n\nEnter course (ex. BSM): ");
fflush(stdin);
scanf("%s", &stud.course);

return stud;
}


void disp_all()
{
FILE* fp;
record stud[10];
int studs;
int i;
int j;

clrscr();
if((fp=fopen("Studrecs.txt", "rb")) == NULL) printf("\n\nAn unknown error occurred. Please try again.");
else
{
printf("STUDENT#\t%-16s%-16s%-12s%-12s%-12s\n\n","LAST NAME","FIRST NAME","MI","BDAY", "COURSE  ");
for(i=0; stud[i].snum!=0; i++)
{
while((studs=fread(&stud[i], sizeof(record), 5, fp))!=0 )
{
for(j=0; j<studs; j++)
{
printf("%lld\t", stud[j].snum);
printf("%-16s", stud[j].lname);
printf("%-16s", stud[j].fname);
printf("%-12s", stud[j].mi);
printf("%-12s", stud[j].bday);
printf("%-12s\n", stud[j].course);
}
getch();
}
}
printf("\n\nPlease press any key to go back to menu.");
getch();
fclose(fp);
}
}

void modifySR()
{
FILE* fp;
record stud[10];
int i;
int j;
int studs;
long long int snum;


if((fp=fopen("Studrecs.txt", "a+b")) == NULL) printf("\n\nAn unknown error occurred. Please try again.");
else
{
clrscr();
printf("\n\nMODIFY STUDENT RECORD. Enter student to be modified.\n");
printf("\n\nStudent number: ");
scanf("%lld", &snum);

for(i=0; i<10; i++)
{
while(fread(&stud[i], sizeof(record), 1, fp))
{
if(snum==stud[i].snum);
{
stud[i].snum = 0;
stud[i+1] = getNew();
fwrite(&stud[i+1], sizeof(record), 1, fp);
printf("\n\n\nStudent record successfully modified!");
fclose(fp);
getch();
break;
}
}
}
}
}

record getNew()
{
record newAccount;

printf("\nNew student number: ");
fflush(stdin);scanf("%lld", &newAccount.snum);
printf("\nNew password: ");
fflush(stdin);gets(newAccount.password);
printf("\nNew last name: ");
fflush(stdin);gets(newAccount.lname);
printf("\nNew first name: ");
fflush(stdin);gets(newAccount.fname);
printf("\nNew MI: ");
fflush(stdin);gets(newAccount.mi);
printf("\nNew birth date: ");
fflush(stdin);gets(newAccount.bday);
printf("\nNew course: ");
fflush(stdin);gets(newAccount.course);

return newAccount;
}
